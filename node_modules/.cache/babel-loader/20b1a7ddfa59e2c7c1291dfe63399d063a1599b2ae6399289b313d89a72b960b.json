{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/reactmega/megaeel/src/Movies.js\",\n  _s = $RefreshSig$();\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport React from 'react';\n\n// function removeMatchedDuplicates(list) {\n//     const mySet1 = new Set();\n//     const dict = {};\n//     for(let i = 0; i < list.length; i++) {\n//         if(dict[list[i][0]] == undefined)  {\n//             dict[list[i][0]] = [list[i][1],list[i][2],list[i][3],list[i][4],1]\n//         } else {\n//             dict[list[i][0]][4] += 1\n//         }\n//     }\n\n//     mySet1.add([]);\n\n//     list = []\n//     for (let i of Object.keys(dict))  {\n//         list.push([i,dict[i][0],dict[i][1],dict[i][2]])\n//     }\n\n//     // getMovieData(list[0][0], list[0][1])\n//     const list2 = [];\n//     // useEffect(() => {\n//     //     async function getMovieData(link,name) {\n//     //         var url = 'https://c5r5fokuj3.execute-api.us-east-2.amazonaws.com/movies?url=' + link + '&name=' + name;\n//     //         const response = await fetch(\n//     //             url\n//     //         );\n//     //         const data = await response.json();\n//     //         return [Object.values(data)];\n//     //     }\n//     //     async function pushdata() {\n//     //         for(let i = 0; i < list.length; i++) {\n\n//     //             list2.push(await getMovieData(list[i][0], list[i][1]));\n//     //              console.log(list2);   \n\n//     //         }\n//     //     }\n//     //     pushdata()\n//         return list\n\n// })\n\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Render(props) {\n  // console.log(props);\n  // var matched1 =[];\n  // const [matched,setMatched] = useState([])\n  // // useEffect(() => {\n  // //     async function hello() {\n  // //         setMatched(removeMatchedDuplicates(props.matched))\n  // //     }  \n  // //     hello()\n  // //     console.log(matched);\n  // // })\n  // console.log(removeMatchedDuplicates(props.matched)[0]);\n  console.log(props.isLoading);\n\n  // 1) word[1]: Link\n  // 2) word[2]: Budget\n  // 3) word[0]: Name\n  // 3) word[3]: Box Office\n\n  // <button key={idx}><br/>{word[1]}</button>\n  // <button>{word[2]}</button>\n  // <button>{word[0]}</button>\n  // <button>{word[3]}</button>\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-deck\",\n      children: props.matched.map(word => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            src: \"...\",\n            alt: \"Card image cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: [word[0], \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Budget: \", word[2]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [\"Box-Office: \", word[3]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: word[1],\n              className: \"btn btn-primary\",\n              target: \"_blank\",\n              children: \"More Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n\n  //  console.log(matched1);\n\n  // \n}\n_c = Render;\nfunction Movies() {\n  _s();\n  document.title = 'Box Office & Budget Finder';\n  const [movie, setMovie] = useState('');\n  // const [matched,setMatched] = useState([])\n  function change(e) {\n    setMovie(e.target.value.toLowerCase());\n\n    // inputWords = movieName.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\" \", \"\").replace(\" \", \"\").replace(\"(\", \"\");\n\n    // console.log(movie);\n  }\n\n  const [fndMovies, setFndMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  function submit(e) {\n    setIsLoading(true);\n    e.preventDefault();\n    const url = 'https://eelanpy1.s3.us-east-2.amazonaws.com/movies.json';\n\n    // console.log(inputWords);\n    async function fetchData() {\n      var matched = [];\n      const response = await fetch(url);\n      const data = await response.json();\n\n      // console.log(matched);\n      for (let i of Object.keys(data)) {\n        for (let j in data[i]) {\n          var movieName = j.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\"(\", \"\");\n          movieName = movieName.replace(\" \", \"\").replace(\" \", \"\");\n\n          // console.log(\"Input: \")\n\n          // console.log(\"Movie: \")\n          // console.log(movieName);\n          if (movieName.includes(movie.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\" \", \"\").replace(\" \", \"\").replace(\"(\", \"\")) == true && matched.includes([data[i][j], j]) == false) {\n            var url2 = 'https://c5r5fokuj3.execute-api.us-east-2.amazonaws.com/movies?url=' + data[i][j] + '&name=' + j;\n            const response2 = await fetch(url2);\n            const data2 = await response2.json();\n            // return [Object.values(data)];\n            if (matched.includes([j, data[i][j], data2[\"budget\"], data2[\"box-office\"]]) == false || matched.includes([j, data[i][j], data2[\"budget\"], data2[\"box-office\"]]) == undefined) {\n              matched.push([j, data[i][j], data2[\"budget\"], data2[\"box-office\"]]);\n            }\n          }\n        }\n      }\n      matched = new Set(matched);\n      matched = Array.from(matched);\n      setIsLoading(false);\n      return matched;\n    }\n    (async () => {\n      setFndMovies(await fetchData());\n    })();\n\n    // console.log(matched);\n    // setMatched(Array.from(matched))\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-4\",\n      style: ({\n        textDecorationLine: 'underline'\n      }, {\n        fontWeight: 'bold'\n      }),\n      children: \"Box Office and Budget Finder:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mt-1\",\n      children: \"This tool is to show you the weather you type in the input below:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mb-2\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            className: `mb-4`,\n            placeholder: \"Please type a movie:\",\n            value: movie,\n            onChange: e => change(e),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Render, {\n      matched: fndMovies,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Movies, \"CBFu9DBproF0PaozyMlm948cvqU=\");\n_c2 = Movies;\nexport default Movies;\nvar _c, _c2;\n$RefreshReg$(_c, \"Render\");\n$RefreshReg$(_c2, \"Movies\");","map":{"version":3,"names":["Form","Col","Row","Image","useEffect","useState","Card","React","jsxDEV","_jsxDEV","Fragment","_Fragment","Render","props","console","log","isLoading","children","className","matched","map","word","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","_c","Movies","_s","document","title","movie","setMovie","change","e","value","toLowerCase","fndMovies","setFndMovies","setIsLoading","submit","preventDefault","url","fetchData","response","fetch","data","json","i","Object","keys","j","movieName","replace","includes","url2","response2","data2","undefined","push","Set","Array","from","style","textDecorationLine","fontWeight","xs","lg","onSubmit","Control","type","placeholder","onChange","autoFocus","_c2","$RefreshReg$"],"sources":["/Users/eelank/reactmega/megaeel/src/Movies.js"],"sourcesContent":["import Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Image from 'react-bootstrap/Image';\nimport { useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card'\nimport React from 'react';\n\n\n// function removeMatchedDuplicates(list) {\n//     const mySet1 = new Set();\n//     const dict = {};\n//     for(let i = 0; i < list.length; i++) {\n//         if(dict[list[i][0]] == undefined)  {\n//             dict[list[i][0]] = [list[i][1],list[i][2],list[i][3],list[i][4],1]\n//         } else {\n//             dict[list[i][0]][4] += 1\n//         }\n//     }\n\n    \n//     mySet1.add([]);\n    \n//     list = []\n//     for (let i of Object.keys(dict))  {\n//         list.push([i,dict[i][0],dict[i][1],dict[i][2]])\n//     }\n\n\n//     // getMovieData(list[0][0], list[0][1])\n//     const list2 = [];\n//     // useEffect(() => {\n//     //     async function getMovieData(link,name) {\n//     //         var url = 'https://c5r5fokuj3.execute-api.us-east-2.amazonaws.com/movies?url=' + link + '&name=' + name;\n//     //         const response = await fetch(\n//     //             url\n//     //         );\n//     //         const data = await response.json();\n//     //         return [Object.values(data)];\n//     //     }\n//     //     async function pushdata() {\n//     //         for(let i = 0; i < list.length; i++) {\n        \n//     //             list2.push(await getMovieData(list[i][0], list[i][1]));\n//     //              console.log(list2);   \n                \n            \n//     //         }\n//     //     }\n//     //     pushdata()\n//         return list\n\n    // })\n\n    \n    \n    \n        \n    \n\n\n// }\n\nfunction Render(props) {\n    \n    // console.log(props);\n    // var matched1 =[];\n    // const [matched,setMatched] = useState([])\n    // // useEffect(() => {\n    // //     async function hello() {\n    // //         setMatched(removeMatchedDuplicates(props.matched))\n    // //     }  \n    // //     hello()\n    // //     console.log(matched);\n    // // })\n    // console.log(removeMatchedDuplicates(props.matched)[0]);\n    console.log(props.isLoading);\n    \n\n        \n        \n\n    \n     // 1) word[1]: Link\n     // 2) word[2]: Budget\n     // 3) word[0]: Name\n     // 3) word[3]: Box Office\n\n                    // <button key={idx}><br/>{word[1]}</button>\n                    // <button>{word[2]}</button>\n                    // <button>{word[0]}</button>\n                    // <button>{word[3]}</button>\n     return (\n        <>\n\n            <div className='card-deck'>\n            {/* {matched} */}\n            {props.matched.map((word) => (\n                <>\n                    \n                    <div className=\"card primary\" >\n                        <img className=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/>\n\n                        <div className=\"card-body text-center\">\n                            <h5 className=\"card-title\">{word[0]}:</h5>\n                            <p className=\"card-text\">Budget: {word[2]}</p>\n                            <p className=\"card-text\">Box-Office: {word[3]}</p>\n\n                            <a href={word[1]} className=\"btn btn-primary\" target='_blank'>More Details</a>\n                        </div>\n                    </div>\n                    \n                </>\n            ))}\n            </div>\n            \n        </>\n    )\n     \n    //  console.log(matched1);\n    \n    \n    // \n}\n\n\nfunction Movies () {\n    document.title = 'Box Office & Budget Finder'\n    \n    const [movie, setMovie] = useState('')\n    // const [matched,setMatched] = useState([])\n    function change(e) {\n        \n        setMovie(e.target.value.toLowerCase());\n\n        // inputWords = movieName.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\" \", \"\").replace(\" \", \"\").replace(\"(\", \"\");\n\n\n        // console.log(movie);\n\n    }\n    const [fndMovies,setFndMovies] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n    function submit(e) {\n        setIsLoading(true);\n        e.preventDefault();\n        \n        \n        const url = 'https://eelanpy1.s3.us-east-2.amazonaws.com/movies.json'\n        \n        \n        // console.log(inputWords);\n        async function fetchData() {\n            var matched = []\n            const response = await fetch(\n                url\n            );\n            const data = await response.json();\n            \n            // console.log(matched);\n            for (let i of Object.keys(data)) {\n\n                for (let j in data[i]) {\n                    var movieName = j.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\"(\", \"\");\n\n                    movieName = movieName.replace(\" \", \"\").replace(\" \", \"\")\n                    \n          \n        \n                    // console.log(\"Input: \")\n                    \n                    // console.log(\"Movie: \")\n                    // console.log(movieName);\n                    if (movieName.includes(movie.toLowerCase().replace(/\"/g, \"\").replace(/'/g, \"\").replace(/\\(|_\\)/g, \"\").replace('-', \"\").replace(')', \"\").replace(\" \", \"\").replace(\" \", \"\").replace(\"(\", \"\")) == true && matched.includes([data[i][j],j]) == false){\n                    \n                        \n                        \n                        var url2 = 'https://c5r5fokuj3.execute-api.us-east-2.amazonaws.com/movies?url=' +  data[i][j]+ '&name=' + j;\n                        const response2 = await fetch(\n                            url2\n                        );\n                        const data2 = await response2.json();\n                        // return [Object.values(data)];\n                        if(matched.includes([j,data[i][j],data2[\"budget\"],data2[\"box-office\"]]) == false || matched.includes([j,data[i][j],data2[\"budget\"],data2[\"box-office\"]]) == undefined) {\n                         matched.push([j,data[i][j],data2[\"budget\"],data2[\"box-office\"]]);\n                    }\n                        \n                      }\n\n\n                }\n                \n              }\n              matched = new Set(matched)\n\n            matched = Array.from(matched)\n              setIsLoading(false);\n            \n              return matched\n            }\n        (async () => {\n                setFndMovies(await fetchData())\n                \n                \n             })()\n        \n\n\n\n        \n\n        // console.log(matched);\n        // setMatched(Array.from(matched))\n        \n        \n        \n    }\n\n\n    \n    \n\n    return (\n        <>\n        <h1\n        className='mt-4'\n        style={({ textDecorationLine: 'underline' }, { fontWeight: 'bold' })}\n      >\n        Box Office and Budget Finder:\n      </h1>\n      <h2 className='mt-1'>\n          This tool is to show you the weather you type in the input below:\n        </h2>\n\n        <Row className='justify-content-md-center mb-2'>\n            <Col xs lg='3'>\n                <form onSubmit={submit}>\n                    <Form.Control\n                    type='text'\n                    className={`mb-4`}      \n                    placeholder='Please type a movie:'\n                    \n                    value={movie}\n                    onChange={(e) => change(e)}\n                    autoFocus\n                    />\n                </form>\n            </Col>\n        </Row>\n        <Render matched={fndMovies} isLoading={isLoading}></Render>\n        {/* {matched}\n        {matched.map((word,key)=> (\n            <button>{word[1]}</button>\n        ))} */}\n        </>\n        )\n}\n\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}